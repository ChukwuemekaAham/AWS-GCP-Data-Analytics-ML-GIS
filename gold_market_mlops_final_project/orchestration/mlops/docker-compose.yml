networks:
  app-network:
    driver: bridge

volumes:
  grafana_data: {}

services:
  magic-platform:
    image: mageai/mageai:latest
    env_file:
      - .env
    build:
      context: .
    command: /app/run_app.sh mage start ${PROJECT_NAME}
    environment:
      ENV: ${ENV}
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - 6789:6789
      - 5000:5000 # Exposing MLflow on port 5000
    volumes:
      # Mount your local codebase to the container.
      - "${PWD}:/$MAGE_CODE_PATH"
      # Store the data output on local machine to easily debug (optional).
      - ./mage_data:/$MAGE_CODE_PATH/mage_data
      # Initial credentials to create an IAM user with limited permissions for deployment.
      - ~/.aws:/root/.aws
      # GCP service account
      - ./clear-router-390022-6ec8275b7a76.json:/home/src/clear-router-390022-6ec8275b7a76.json
      # Local machine’s SSH keys to pull and push to your GitHub repository.
      - ~/.ssh:/root/.ssh:ro
      # Local machine’s GitHub configs
      - ~/.gitconfig:/root/.gitconfig:ro
    restart: on-failure:5
    networks:
      - app-network
    depends_on:
      - postgres
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging
  postgres:
    # image: pgvector/pgvector:0.6.0-pg16
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - "./mlops_postgres_data:/var/lib/postgresql/data:rw"
      # Custom database initialization scripts (optional).
      # - ./scripts/database:/docker-entrypoint-initdb.d
    restart: on-failure
    networks:
      - app-network
  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./data_pgadmin:/var/lib/pgadmin
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      - app-network
  grafana:
    image: grafana/grafana
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./monitoring/config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./monitoring/dashboards:/opt/grafana/dashboards
    depends_on:
      - postgres
    networks:
      - app-network
    restart: always
